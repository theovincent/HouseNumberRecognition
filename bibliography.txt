The problem to solve and the data set:
http://ufldl.stanford.edu/housenumbers/

A dataset closed to SVHN dataset:
http://yann.lecun.com/exdb/mnist/


To create a Dataloader:
https://towardsdatascience.com/building-efficient-custom-datasets-in-pytorch-2563b946fd9f

To create a Classifier:
https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html?highlight=classifier
https://medium.com/dair-ai/a-simple-neural-network-from-scratch-with-pytorch-and-google-colab-c7f3830618e0

Net structure:
https://towardsdatascience.com/convolutional-neural-network-for-image-classification-with-implementation-on-python-using-pytorch-7b88342c9ca9

To compute metrics:
https://towardsdatascience.com/the-5-classification-evaluation-metrics-you-must-know-aa97784ff226

To reduce overfitting and underfitting:
https://towardsdatascience.com/overfitting-vs-underfitting-a-complete-example-d05dd7e19765


To train and to see the validation in the same time:
https://www.javatpoint.com/pytorch-validation-of-convolutional-neural-network-model

https://www.researchgate.net/post/what_is_the_best_way_to_measure_accuracy_over_epochs

To load a .mat file:
https://towardsdatascience.com/how-to-load-matlab-mat-files-in-python-1f200e1287b5

Python documentation:
https://docs.python.org/fr/3/library/pathlib.html
Pytorch documentation of Pytorch: 
for nn.Module: https://pytorch.org/docs/stable/nn.html

for Conv2d, MaxPool2d: https://d2l.ai/chapter_convolutional-neural-networks/padding-and-strides.html

https://github.com/vdumoulin/conv_arithmetic/blob/master/README.md
